// Hyperchain License
// Copyright (C) 2016-2019 The Hyperchain Authors.

syntax = "proto3";

package consensus;

import "github.com/gogo/protobuf/gogoproto/gogo.proto";

message Checkpoint {
  option (gogoproto.goproto_stringer) = false;

  uint64 epoch = 1;

  // Execute state of the executed block
  message ExecuteState {
    uint64 height = 1;
    string digest = 2;
  }
  ExecuteState execute_state = 2;

  bool need_update_epoch = 3;

  uint64 new_view = 4;
}

// SignedCheckpoint contains the actual checkpoint with signature
message SignedCheckpoint {
  option (gogoproto.goproto_stringer) = false;

  // Checkpoint is the info of checkpoint.
  Checkpoint checkpoint = 1;
  // Author is the signer for signature.
  uint64 author = 2;
  // Signature is the signature for checkpoint.
  bytes signature = 3;
}

// QuorumCheckpoint contains the actual checkpoint with signatures
// by different quorum validators
message QuorumCheckpoint {
  option (gogoproto.goproto_stringer) = false;

  // Checkpoint is the info of checkpoint.
  Checkpoint checkpoint = 1;
  // Signatures is the aggregated signature for checkpoint.
  map<uint64, bytes> signatures = 2;
}

// EpochChangeProof is a slice of checkpoints with contiguous increasing epoch numbers
// to prove a sequence if epoch changes from the first checkpoint's epoch
message EpochChangeProof {
  option (gogoproto.goproto_stringer) = false;
  repeated EpochChange epoch_changes = 1;
  // Indicate whether the node where proof comes from has more epoch changes
  uint64 more = 2;
  // Where the proof comes from
  uint64 author = 3;
  // Help remote check genesis block digest
  string genesis_block_digest = 4;
}

message EpochChange {
  // The slice of quorum checkpoints
  QuorumCheckpoint checkpoint = 1;
  // Help remote node sync from validators
  repeated string validators = 2;
}