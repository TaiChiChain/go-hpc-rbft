// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        v4.24.4
// source: fltTransaction.proto

package consensus

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type FltTransaction_TxType int32

const (
	FltTransaction_NTX              FltTransaction_TxType = 0
	FltTransaction_CTX              FltTransaction_TxType = 1 // config tx
	FltTransaction_CROSSCHAINTX     FltTransaction_TxType = 2 // cross chain tx
	FltTransaction_ANCHORTX         FltTransaction_TxType = 3 // anchor tx
	FltTransaction_CROSSCHAINTXAUTO FltTransaction_TxType = 4
	FltTransaction_ANCHORTXAUTO     FltTransaction_TxType = 5
	FltTransaction_TIMEOUTTX        FltTransaction_TxType = 6
)

// Enum value maps for FltTransaction_TxType.
var (
	FltTransaction_TxType_name = map[int32]string{
		0: "NTX",
		1: "CTX",
		2: "CROSSCHAINTX",
		3: "ANCHORTX",
		4: "CROSSCHAINTXAUTO",
		5: "ANCHORTXAUTO",
		6: "TIMEOUTTX",
	}
	FltTransaction_TxType_value = map[string]int32{
		"NTX":              0,
		"CTX":              1,
		"CROSSCHAINTX":     2,
		"ANCHORTX":         3,
		"CROSSCHAINTXAUTO": 4,
		"ANCHORTXAUTO":     5,
		"TIMEOUTTX":        6,
	}
)

func (x FltTransaction_TxType) Enum() *FltTransaction_TxType {
	p := new(FltTransaction_TxType)
	*p = x
	return p
}

func (x FltTransaction_TxType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (FltTransaction_TxType) Descriptor() protoreflect.EnumDescriptor {
	return file_fltTransaction_proto_enumTypes[0].Descriptor()
}

func (FltTransaction_TxType) Type() protoreflect.EnumType {
	return &file_fltTransaction_proto_enumTypes[0]
}

func (x FltTransaction_TxType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use FltTransaction_TxType.Descriptor instead.
func (FltTransaction_TxType) EnumDescriptor() ([]byte, []int) {
	return file_fltTransaction_proto_rawDescGZIP(), []int{0, 0}
}

type InvalidTransactionRecord_ErrType int32

const (
	InvalidTransactionRecord_OUTOFBALANCE           InvalidTransactionRecord_ErrType = 0
	InvalidTransactionRecord_SIGFAILED              InvalidTransactionRecord_ErrType = 1
	InvalidTransactionRecord_INVOKE_CONTRACT_FAILED InvalidTransactionRecord_ErrType = 2
	InvalidTransactionRecord_DEPLOY_CONTRACT_FAILED InvalidTransactionRecord_ErrType = 3
	InvalidTransactionRecord_INVALID_PERMISSION     InvalidTransactionRecord_ErrType = 4
	InvalidTransactionRecord_DID_INVOCATION_FAILED  InvalidTransactionRecord_ErrType = 5
	InvalidTransactionRecord_EXEC_KVSQL_FAILED      InvalidTransactionRecord_ErrType = 6
	InvalidTransactionRecord_OUTOFGAS               InvalidTransactionRecord_ErrType = 7
)

// Enum value maps for InvalidTransactionRecord_ErrType.
var (
	InvalidTransactionRecord_ErrType_name = map[int32]string{
		0: "OUTOFBALANCE",
		1: "SIGFAILED",
		2: "INVOKE_CONTRACT_FAILED",
		3: "DEPLOY_CONTRACT_FAILED",
		4: "INVALID_PERMISSION",
		5: "DID_INVOCATION_FAILED",
		6: "EXEC_KVSQL_FAILED",
		7: "OUTOFGAS",
	}
	InvalidTransactionRecord_ErrType_value = map[string]int32{
		"OUTOFBALANCE":           0,
		"SIGFAILED":              1,
		"INVOKE_CONTRACT_FAILED": 2,
		"DEPLOY_CONTRACT_FAILED": 3,
		"INVALID_PERMISSION":     4,
		"DID_INVOCATION_FAILED":  5,
		"EXEC_KVSQL_FAILED":      6,
		"OUTOFGAS":               7,
	}
)

func (x InvalidTransactionRecord_ErrType) Enum() *InvalidTransactionRecord_ErrType {
	p := new(InvalidTransactionRecord_ErrType)
	*p = x
	return p
}

func (x InvalidTransactionRecord_ErrType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (InvalidTransactionRecord_ErrType) Descriptor() protoreflect.EnumDescriptor {
	return file_fltTransaction_proto_enumTypes[1].Descriptor()
}

func (InvalidTransactionRecord_ErrType) Type() protoreflect.EnumType {
	return &file_fltTransaction_proto_enumTypes[1]
}

func (x InvalidTransactionRecord_ErrType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use InvalidTransactionRecord_ErrType.Descriptor instead.
func (InvalidTransactionRecord_ErrType) EnumDescriptor() ([]byte, []int) {
	return file_fltTransaction_proto_rawDescGZIP(), []int{2, 0}
}

type TransactionValue_Opcode int32

const (
	TransactionValue_NORMAL                 TransactionValue_Opcode = 0
	TransactionValue_UPDATE                 TransactionValue_Opcode = 1
	TransactionValue_FREEZE                 TransactionValue_Opcode = 2
	TransactionValue_UNFREEZE               TransactionValue_Opcode = 3
	TransactionValue_SKIPVM                 TransactionValue_Opcode = 4
	TransactionValue_DESTROY                TransactionValue_Opcode = 5
	TransactionValue_ARCHIVE                TransactionValue_Opcode = 100
	TransactionValue_DID_REGISTER           TransactionValue_Opcode = 200
	TransactionValue_DID_FREEZE             TransactionValue_Opcode = 201
	TransactionValue_DID_UNFREEZE           TransactionValue_Opcode = 202
	TransactionValue_DID_ABANDON            TransactionValue_Opcode = 203
	TransactionValue_DID_UPDATEPUBLICKEY    TransactionValue_Opcode = 204
	TransactionValue_DID_UPDATEADMINS       TransactionValue_Opcode = 205
	TransactionValue_DIDCREDENTIAL_UPLOAD   TransactionValue_Opcode = 206
	TransactionValue_DIDCREDENTIAL_DOWNLOAD TransactionValue_Opcode = 207
	TransactionValue_DIDCREDENTIAL_ABANDON  TransactionValue_Opcode = 208
	TransactionValue_DID_SETEXTRA           TransactionValue_Opcode = 209
	TransactionValue_DID_GETEXTRA           TransactionValue_Opcode = 210
)

// Enum value maps for TransactionValue_Opcode.
var (
	TransactionValue_Opcode_name = map[int32]string{
		0:   "NORMAL",
		1:   "UPDATE",
		2:   "FREEZE",
		3:   "UNFREEZE",
		4:   "SKIPVM",
		5:   "DESTROY",
		100: "ARCHIVE",
		200: "DID_REGISTER",
		201: "DID_FREEZE",
		202: "DID_UNFREEZE",
		203: "DID_ABANDON",
		204: "DID_UPDATEPUBLICKEY",
		205: "DID_UPDATEADMINS",
		206: "DIDCREDENTIAL_UPLOAD",
		207: "DIDCREDENTIAL_DOWNLOAD",
		208: "DIDCREDENTIAL_ABANDON",
		209: "DID_SETEXTRA",
		210: "DID_GETEXTRA",
	}
	TransactionValue_Opcode_value = map[string]int32{
		"NORMAL":                 0,
		"UPDATE":                 1,
		"FREEZE":                 2,
		"UNFREEZE":               3,
		"SKIPVM":                 4,
		"DESTROY":                5,
		"ARCHIVE":                100,
		"DID_REGISTER":           200,
		"DID_FREEZE":             201,
		"DID_UNFREEZE":           202,
		"DID_ABANDON":            203,
		"DID_UPDATEPUBLICKEY":    204,
		"DID_UPDATEADMINS":       205,
		"DIDCREDENTIAL_UPLOAD":   206,
		"DIDCREDENTIAL_DOWNLOAD": 207,
		"DIDCREDENTIAL_ABANDON":  208,
		"DID_SETEXTRA":           209,
		"DID_GETEXTRA":           210,
	}
)

func (x TransactionValue_Opcode) Enum() *TransactionValue_Opcode {
	p := new(TransactionValue_Opcode)
	*p = x
	return p
}

func (x TransactionValue_Opcode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TransactionValue_Opcode) Descriptor() protoreflect.EnumDescriptor {
	return file_fltTransaction_proto_enumTypes[2].Descriptor()
}

func (TransactionValue_Opcode) Type() protoreflect.EnumType {
	return &file_fltTransaction_proto_enumTypes[2]
}

func (x TransactionValue_Opcode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use TransactionValue_Opcode.Descriptor instead.
func (TransactionValue_Opcode) EnumDescriptor() ([]byte, []int) {
	return file_fltTransaction_proto_rawDescGZIP(), []int{6, 0}
}

type TransactionValue_VmType int32

const (
	TransactionValue_EVM      TransactionValue_VmType = 0
	TransactionValue_JVM      TransactionValue_VmType = 1
	TransactionValue_HVM      TransactionValue_VmType = 2
	TransactionValue_BVM      TransactionValue_VmType = 3
	TransactionValue_TRANSFER TransactionValue_VmType = 4
	TransactionValue_KVSQL    TransactionValue_VmType = 5
	TransactionValue_FVM      TransactionValue_VmType = 6
)

// Enum value maps for TransactionValue_VmType.
var (
	TransactionValue_VmType_name = map[int32]string{
		0: "EVM",
		1: "JVM",
		2: "HVM",
		3: "BVM",
		4: "TRANSFER",
		5: "KVSQL",
		6: "FVM",
	}
	TransactionValue_VmType_value = map[string]int32{
		"EVM":      0,
		"JVM":      1,
		"HVM":      2,
		"BVM":      3,
		"TRANSFER": 4,
		"KVSQL":    5,
		"FVM":      6,
	}
)

func (x TransactionValue_VmType) Enum() *TransactionValue_VmType {
	p := new(TransactionValue_VmType)
	*p = x
	return p
}

func (x TransactionValue_VmType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TransactionValue_VmType) Descriptor() protoreflect.EnumDescriptor {
	return file_fltTransaction_proto_enumTypes[3].Descriptor()
}

func (TransactionValue_VmType) Type() protoreflect.EnumType {
	return &file_fltTransaction_proto_enumTypes[3]
}

func (x TransactionValue_VmType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use TransactionValue_VmType.Descriptor instead.
func (TransactionValue_VmType) EnumDescriptor() ([]byte, []int) {
	return file_fltTransaction_proto_rawDescGZIP(), []int{6, 1}
}

type FltTransaction struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Version             []byte                `protobuf:"bytes,1,opt,name=version,proto3" json:"version,omitempty"`
	From                []byte                `protobuf:"bytes,2,opt,name=from,proto3" json:"from,omitempty"`
	To                  []byte                `protobuf:"bytes,3,opt,name=to,proto3" json:"to,omitempty"`
	Value               []byte                `protobuf:"bytes,4,opt,name=value,proto3" json:"value,omitempty"`
	Timestamp           int64                 `protobuf:"varint,5,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	Signature           []byte                `protobuf:"bytes,6,opt,name=signature,proto3" json:"signature,omitempty"`
	Id                  uint64                `protobuf:"varint,7,opt,name=id,proto3" json:"id,omitempty"`
	TransactionHash     []byte                `protobuf:"bytes,8,opt,name=transactionHash,proto3" json:"transactionHash,omitempty"`
	Nonce               int64                 `protobuf:"varint,9,opt,name=nonce,proto3" json:"nonce,omitempty"`
	Other               *NonHash              `protobuf:"bytes,10,opt,name=other,proto3" json:"other,omitempty"`
	TxType              FltTransaction_TxType `protobuf:"varint,11,opt,name=txType,proto3,enum=consensus.FltTransaction_TxType" json:"txType,omitempty"`
	CName               []byte                `protobuf:"bytes,12,opt,name=cName,proto3" json:"cName,omitempty"`
	ExpirationTimestamp int64                 `protobuf:"varint,13,opt,name=expiration_timestamp,json=expirationTimestamp,proto3" json:"expiration_timestamp,omitempty"`
	Participant         *Participant          `protobuf:"bytes,14,opt,name=participant,proto3" json:"participant,omitempty"`
}

func (x *FltTransaction) Reset() {
	*x = FltTransaction{}
	if protoimpl.UnsafeEnabled {
		mi := &file_fltTransaction_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FltTransaction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FltTransaction) ProtoMessage() {}

func (x *FltTransaction) ProtoReflect() protoreflect.Message {
	mi := &file_fltTransaction_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FltTransaction.ProtoReflect.Descriptor instead.
func (*FltTransaction) Descriptor() ([]byte, []int) {
	return file_fltTransaction_proto_rawDescGZIP(), []int{0}
}

func (x *FltTransaction) GetVersion() []byte {
	if x != nil {
		return x.Version
	}
	return nil
}

func (x *FltTransaction) GetFrom() []byte {
	if x != nil {
		return x.From
	}
	return nil
}

func (x *FltTransaction) GetTo() []byte {
	if x != nil {
		return x.To
	}
	return nil
}

func (x *FltTransaction) GetValue() []byte {
	if x != nil {
		return x.Value
	}
	return nil
}

func (x *FltTransaction) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *FltTransaction) GetSignature() []byte {
	if x != nil {
		return x.Signature
	}
	return nil
}

func (x *FltTransaction) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *FltTransaction) GetTransactionHash() []byte {
	if x != nil {
		return x.TransactionHash
	}
	return nil
}

func (x *FltTransaction) GetNonce() int64 {
	if x != nil {
		return x.Nonce
	}
	return 0
}

func (x *FltTransaction) GetOther() *NonHash {
	if x != nil {
		return x.Other
	}
	return nil
}

func (x *FltTransaction) GetTxType() FltTransaction_TxType {
	if x != nil {
		return x.TxType
	}
	return FltTransaction_NTX
}

func (x *FltTransaction) GetCName() []byte {
	if x != nil {
		return x.CName
	}
	return nil
}

func (x *FltTransaction) GetExpirationTimestamp() int64 {
	if x != nil {
		return x.ExpirationTimestamp
	}
	return 0
}

func (x *FltTransaction) GetParticipant() *Participant {
	if x != nil {
		return x.Participant
	}
	return nil
}

type Participant struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Initiator   []byte   `protobuf:"bytes,1,opt,name=initiator,proto3" json:"initiator,omitempty"`
	Withholding [][]byte `protobuf:"bytes,2,rep,name=withholding,proto3" json:"withholding,omitempty"`
}

func (x *Participant) Reset() {
	*x = Participant{}
	if protoimpl.UnsafeEnabled {
		mi := &file_fltTransaction_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Participant) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Participant) ProtoMessage() {}

func (x *Participant) ProtoReflect() protoreflect.Message {
	mi := &file_fltTransaction_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Participant.ProtoReflect.Descriptor instead.
func (*Participant) Descriptor() ([]byte, []int) {
	return file_fltTransaction_proto_rawDescGZIP(), []int{1}
}

func (x *Participant) GetInitiator() []byte {
	if x != nil {
		return x.Initiator
	}
	return nil
}

func (x *Participant) GetWithholding() [][]byte {
	if x != nil {
		return x.Withholding
	}
	return nil
}

type InvalidTransactionRecord struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Tx      *FltTransaction                  `protobuf:"bytes,1,opt,name=tx,proto3" json:"tx,omitempty"`
	ErrType InvalidTransactionRecord_ErrType `protobuf:"varint,2,opt,name=errType,proto3,enum=consensus.InvalidTransactionRecord_ErrType" json:"errType,omitempty"`
	ErrMsg  []byte                           `protobuf:"bytes,3,opt,name=errMsg,proto3" json:"errMsg,omitempty"`
	Index   uint64                           `protobuf:"varint,4,opt,name=index,proto3" json:"index,omitempty"`
}

func (x *InvalidTransactionRecord) Reset() {
	*x = InvalidTransactionRecord{}
	if protoimpl.UnsafeEnabled {
		mi := &file_fltTransaction_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InvalidTransactionRecord) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InvalidTransactionRecord) ProtoMessage() {}

func (x *InvalidTransactionRecord) ProtoReflect() protoreflect.Message {
	mi := &file_fltTransaction_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InvalidTransactionRecord.ProtoReflect.Descriptor instead.
func (*InvalidTransactionRecord) Descriptor() ([]byte, []int) {
	return file_fltTransaction_proto_rawDescGZIP(), []int{2}
}

func (x *InvalidTransactionRecord) GetTx() *FltTransaction {
	if x != nil {
		return x.Tx
	}
	return nil
}

func (x *InvalidTransactionRecord) GetErrType() InvalidTransactionRecord_ErrType {
	if x != nil {
		return x.ErrType
	}
	return InvalidTransactionRecord_OUTOFBALANCE
}

func (x *InvalidTransactionRecord) GetErrMsg() []byte {
	if x != nil {
		return x.ErrMsg
	}
	return nil
}

func (x *InvalidTransactionRecord) GetIndex() uint64 {
	if x != nil {
		return x.Index
	}
	return 0
}

type InvalidTransactionRecords struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Records []*InvalidTransactionRecord `protobuf:"bytes,1,rep,name=records,proto3" json:"records,omitempty"`
}

func (x *InvalidTransactionRecords) Reset() {
	*x = InvalidTransactionRecords{}
	if protoimpl.UnsafeEnabled {
		mi := &file_fltTransaction_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InvalidTransactionRecords) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InvalidTransactionRecords) ProtoMessage() {}

func (x *InvalidTransactionRecords) ProtoReflect() protoreflect.Message {
	mi := &file_fltTransaction_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InvalidTransactionRecords.ProtoReflect.Descriptor instead.
func (*InvalidTransactionRecords) Descriptor() ([]byte, []int) {
	return file_fltTransaction_proto_rawDescGZIP(), []int{3}
}

func (x *InvalidTransactionRecords) GetRecords() []*InvalidTransactionRecord {
	if x != nil {
		return x.Records
	}
	return nil
}

type TransactionMeta struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BlockIndex uint64 `protobuf:"varint,1,opt,name=BlockIndex,proto3" json:"BlockIndex,omitempty"`
	Index      int64  `protobuf:"varint,2,opt,name=Index,proto3" json:"Index,omitempty"`
	Version    uint64 `protobuf:"varint,3,opt,name=version,proto3" json:"version,omitempty"`
	Invalid    bool   `protobuf:"varint,4,opt,name=Invalid,proto3" json:"Invalid,omitempty"`
}

func (x *TransactionMeta) Reset() {
	*x = TransactionMeta{}
	if protoimpl.UnsafeEnabled {
		mi := &file_fltTransaction_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TransactionMeta) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TransactionMeta) ProtoMessage() {}

func (x *TransactionMeta) ProtoReflect() protoreflect.Message {
	mi := &file_fltTransaction_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TransactionMeta.ProtoReflect.Descriptor instead.
func (*TransactionMeta) Descriptor() ([]byte, []int) {
	return file_fltTransaction_proto_rawDescGZIP(), []int{4}
}

func (x *TransactionMeta) GetBlockIndex() uint64 {
	if x != nil {
		return x.BlockIndex
	}
	return 0
}

func (x *TransactionMeta) GetIndex() int64 {
	if x != nil {
		return x.Index
	}
	return 0
}

func (x *TransactionMeta) GetVersion() uint64 {
	if x != nil {
		return x.Version
	}
	return 0
}

func (x *TransactionMeta) GetInvalid() bool {
	if x != nil {
		return x.Invalid
	}
	return false
}

type TransactionWrapper struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TransactionVersion []byte `protobuf:"bytes,1,opt,name=transactionVersion,proto3" json:"transactionVersion,omitempty"`
	Transaction        []byte `protobuf:"bytes,2,opt,name=transaction,proto3" json:"transaction,omitempty"`
}

func (x *TransactionWrapper) Reset() {
	*x = TransactionWrapper{}
	if protoimpl.UnsafeEnabled {
		mi := &file_fltTransaction_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TransactionWrapper) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TransactionWrapper) ProtoMessage() {}

func (x *TransactionWrapper) ProtoReflect() protoreflect.Message {
	mi := &file_fltTransaction_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TransactionWrapper.ProtoReflect.Descriptor instead.
func (*TransactionWrapper) Descriptor() ([]byte, []int) {
	return file_fltTransaction_proto_rawDescGZIP(), []int{5}
}

func (x *TransactionWrapper) GetTransactionVersion() []byte {
	if x != nil {
		return x.TransactionVersion
	}
	return nil
}

func (x *TransactionWrapper) GetTransaction() []byte {
	if x != nil {
		return x.Transaction
	}
	return nil
}

type TransactionValue struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Price              int64                   `protobuf:"varint,1,opt,name=price,proto3" json:"price,omitempty"`
	GasLimit           int64                   `protobuf:"varint,2,opt,name=gasLimit,proto3" json:"gasLimit,omitempty"`
	Amount             int64                   `protobuf:"varint,3,opt,name=amount,proto3" json:"amount,omitempty"`
	Payload            []byte                  `protobuf:"bytes,4,opt,name=payload,proto3" json:"payload,omitempty"`
	EncryptedAmount    []byte                  `protobuf:"bytes,5,opt,name=encryptedAmount,proto3" json:"encryptedAmount,omitempty"`
	HomomorphicAmount  []byte                  `protobuf:"bytes,6,opt,name=homomorphicAmount,proto3" json:"homomorphicAmount,omitempty"`
	HomomorphicBalance []byte                  `protobuf:"bytes,7,opt,name=homomorphicBalance,proto3" json:"homomorphicBalance,omitempty"`
	Op                 TransactionValue_Opcode `protobuf:"varint,8,opt,name=op,proto3,enum=consensus.TransactionValue_Opcode" json:"op,omitempty"`
	Extra              []byte                  `protobuf:"bytes,9,opt,name=extra,proto3" json:"extra,omitempty"`
	ExtraId            []byte                  `protobuf:"bytes,10,opt,name=extraId,proto3" json:"extraId,omitempty"`
	VmType             TransactionValue_VmType `protobuf:"varint,11,opt,name=vmType,proto3,enum=consensus.TransactionValue_VmType" json:"vmType,omitempty"`
}

func (x *TransactionValue) Reset() {
	*x = TransactionValue{}
	if protoimpl.UnsafeEnabled {
		mi := &file_fltTransaction_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TransactionValue) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TransactionValue) ProtoMessage() {}

func (x *TransactionValue) ProtoReflect() protoreflect.Message {
	mi := &file_fltTransaction_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TransactionValue.ProtoReflect.Descriptor instead.
func (*TransactionValue) Descriptor() ([]byte, []int) {
	return file_fltTransaction_proto_rawDescGZIP(), []int{6}
}

func (x *TransactionValue) GetPrice() int64 {
	if x != nil {
		return x.Price
	}
	return 0
}

func (x *TransactionValue) GetGasLimit() int64 {
	if x != nil {
		return x.GasLimit
	}
	return 0
}

func (x *TransactionValue) GetAmount() int64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *TransactionValue) GetPayload() []byte {
	if x != nil {
		return x.Payload
	}
	return nil
}

func (x *TransactionValue) GetEncryptedAmount() []byte {
	if x != nil {
		return x.EncryptedAmount
	}
	return nil
}

func (x *TransactionValue) GetHomomorphicAmount() []byte {
	if x != nil {
		return x.HomomorphicAmount
	}
	return nil
}

func (x *TransactionValue) GetHomomorphicBalance() []byte {
	if x != nil {
		return x.HomomorphicBalance
	}
	return nil
}

func (x *TransactionValue) GetOp() TransactionValue_Opcode {
	if x != nil {
		return x.Op
	}
	return TransactionValue_NORMAL
}

func (x *TransactionValue) GetExtra() []byte {
	if x != nil {
		return x.Extra
	}
	return nil
}

func (x *TransactionValue) GetExtraId() []byte {
	if x != nil {
		return x.ExtraId
	}
	return nil
}

func (x *TransactionValue) GetVmType() TransactionValue_VmType {
	if x != nil {
		return x.VmType
	}
	return TransactionValue_EVM
}

type InvokeArgs struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code       []byte   `protobuf:"bytes,1,opt,name=code,proto3" json:"code,omitempty"`
	MethodName string   `protobuf:"bytes,2,opt,name=methodName,proto3" json:"methodName,omitempty"`
	Args       [][]byte `protobuf:"bytes,3,rep,name=args,proto3" json:"args,omitempty"`
}

func (x *InvokeArgs) Reset() {
	*x = InvokeArgs{}
	if protoimpl.UnsafeEnabled {
		mi := &file_fltTransaction_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InvokeArgs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InvokeArgs) ProtoMessage() {}

func (x *InvokeArgs) ProtoReflect() protoreflect.Message {
	mi := &file_fltTransaction_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InvokeArgs.ProtoReflect.Descriptor instead.
func (*InvokeArgs) Descriptor() ([]byte, []int) {
	return file_fltTransaction_proto_rawDescGZIP(), []int{7}
}

func (x *InvokeArgs) GetCode() []byte {
	if x != nil {
		return x.Code
	}
	return nil
}

func (x *InvokeArgs) GetMethodName() string {
	if x != nil {
		return x.MethodName
	}
	return ""
}

func (x *InvokeArgs) GetArgs() [][]byte {
	if x != nil {
		return x.Args
	}
	return nil
}

type NonHash struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NodeHash      []byte   `protobuf:"bytes,1,opt,name=nodeHash,proto3" json:"nodeHash,omitempty"`
	PrivateTxHash []byte   `protobuf:"bytes,2,opt,name=privateTxHash,proto3" json:"privateTxHash,omitempty"`
	Collection    []string `protobuf:"bytes,3,rep,name=collection,proto3" json:"collection,omitempty"`
	Nonce         uint64   `protobuf:"varint,4,opt,name=nonce,proto3" json:"nonce,omitempty"`
}

func (x *NonHash) Reset() {
	*x = NonHash{}
	if protoimpl.UnsafeEnabled {
		mi := &file_fltTransaction_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NonHash) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NonHash) ProtoMessage() {}

func (x *NonHash) ProtoReflect() protoreflect.Message {
	mi := &file_fltTransaction_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NonHash.ProtoReflect.Descriptor instead.
func (*NonHash) Descriptor() ([]byte, []int) {
	return file_fltTransaction_proto_rawDescGZIP(), []int{8}
}

func (x *NonHash) GetNodeHash() []byte {
	if x != nil {
		return x.NodeHash
	}
	return nil
}

func (x *NonHash) GetPrivateTxHash() []byte {
	if x != nil {
		return x.PrivateTxHash
	}
	return nil
}

func (x *NonHash) GetCollection() []string {
	if x != nil {
		return x.Collection
	}
	return nil
}

func (x *NonHash) GetNonce() uint64 {
	if x != nil {
		return x.Nonce
	}
	return 0
}

var File_fltTransaction_proto protoreflect.FileDescriptor

var file_fltTransaction_proto_rawDesc = []byte{
	0x0a, 0x14, 0x66, 0x6c, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x09, 0x63, 0x6f, 0x6e, 0x73, 0x65, 0x6e, 0x73, 0x75,
	0x73, 0x22, 0xca, 0x04, 0x0a, 0x0e, 0x46, 0x6c, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x12,
	0x0a, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x66, 0x72,
	0x6f, 0x6d, 0x12, 0x0e, 0x0a, 0x02, 0x74, 0x6f, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x02,
	0x74, 0x6f, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0c, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x74, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74,
	0x75, 0x72, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61,
	0x74, 0x75, 0x72, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x28, 0x0a, 0x0f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x48, 0x61, 0x73, 0x68, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0f, 0x74,
	0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x61, 0x73, 0x68, 0x12, 0x14,
	0x0a, 0x05, 0x6e, 0x6f, 0x6e, 0x63, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x6e,
	0x6f, 0x6e, 0x63, 0x65, 0x12, 0x28, 0x0a, 0x05, 0x6f, 0x74, 0x68, 0x65, 0x72, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x63, 0x6f, 0x6e, 0x73, 0x65, 0x6e, 0x73, 0x75, 0x73, 0x2e,
	0x4e, 0x6f, 0x6e, 0x48, 0x61, 0x73, 0x68, 0x52, 0x05, 0x6f, 0x74, 0x68, 0x65, 0x72, 0x12, 0x38,
	0x0a, 0x06, 0x74, 0x78, 0x54, 0x79, 0x70, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x20,
	0x2e, 0x63, 0x6f, 0x6e, 0x73, 0x65, 0x6e, 0x73, 0x75, 0x73, 0x2e, 0x46, 0x6c, 0x74, 0x54, 0x72,
	0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x54, 0x78, 0x54, 0x79, 0x70, 0x65,
	0x52, 0x06, 0x74, 0x78, 0x54, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x4e, 0x61, 0x6d,
	0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x05, 0x63, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x31,
	0x0a, 0x14, 0x65, 0x78, 0x70, 0x69, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x03, 0x52, 0x13, 0x65, 0x78,
	0x70, 0x69, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x12, 0x38, 0x0a, 0x0b, 0x70, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74,
	0x18, 0x0e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x63, 0x6f, 0x6e, 0x73, 0x65, 0x6e, 0x73,
	0x75, 0x73, 0x2e, 0x50, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x52, 0x0b,
	0x70, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x22, 0x71, 0x0a, 0x06, 0x54,
	0x78, 0x54, 0x79, 0x70, 0x65, 0x12, 0x07, 0x0a, 0x03, 0x4e, 0x54, 0x58, 0x10, 0x00, 0x12, 0x07,
	0x0a, 0x03, 0x43, 0x54, 0x58, 0x10, 0x01, 0x12, 0x10, 0x0a, 0x0c, 0x43, 0x52, 0x4f, 0x53, 0x53,
	0x43, 0x48, 0x41, 0x49, 0x4e, 0x54, 0x58, 0x10, 0x02, 0x12, 0x0c, 0x0a, 0x08, 0x41, 0x4e, 0x43,
	0x48, 0x4f, 0x52, 0x54, 0x58, 0x10, 0x03, 0x12, 0x14, 0x0a, 0x10, 0x43, 0x52, 0x4f, 0x53, 0x53,
	0x43, 0x48, 0x41, 0x49, 0x4e, 0x54, 0x58, 0x41, 0x55, 0x54, 0x4f, 0x10, 0x04, 0x12, 0x10, 0x0a,
	0x0c, 0x41, 0x4e, 0x43, 0x48, 0x4f, 0x52, 0x54, 0x58, 0x41, 0x55, 0x54, 0x4f, 0x10, 0x05, 0x12,
	0x0d, 0x0a, 0x09, 0x54, 0x49, 0x4d, 0x45, 0x4f, 0x55, 0x54, 0x54, 0x58, 0x10, 0x06, 0x22, 0x4d,
	0x0a, 0x0b, 0x50, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x12, 0x1c, 0x0a,
	0x09, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x74, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x09, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x74, 0x6f, 0x72, 0x12, 0x20, 0x0a, 0x0b, 0x77,
	0x69, 0x74, 0x68, 0x68, 0x6f, 0x6c, 0x64, 0x69, 0x6e, 0x67, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0c,
	0x52, 0x0b, 0x77, 0x69, 0x74, 0x68, 0x68, 0x6f, 0x6c, 0x64, 0x69, 0x6e, 0x67, 0x22, 0xf7, 0x02,
	0x0a, 0x18, 0x49, 0x6e, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x12, 0x29, 0x0a, 0x02, 0x74, 0x78,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x63, 0x6f, 0x6e, 0x73, 0x65, 0x6e, 0x73,
	0x75, 0x73, 0x2e, 0x46, 0x6c, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x02, 0x74, 0x78, 0x12, 0x45, 0x0a, 0x07, 0x65, 0x72, 0x72, 0x54, 0x79, 0x70, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2b, 0x2e, 0x63, 0x6f, 0x6e, 0x73, 0x65, 0x6e, 0x73,
	0x75, 0x73, 0x2e, 0x49, 0x6e, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x2e, 0x45, 0x72, 0x72, 0x54,
	0x79, 0x70, 0x65, 0x52, 0x07, 0x65, 0x72, 0x72, 0x54, 0x79, 0x70, 0x65, 0x12, 0x16, 0x0a, 0x06,
	0x65, 0x72, 0x72, 0x4d, 0x73, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x06, 0x65, 0x72,
	0x72, 0x4d, 0x73, 0x67, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x22, 0xba, 0x01, 0x0a, 0x07, 0x45,
	0x72, 0x72, 0x54, 0x79, 0x70, 0x65, 0x12, 0x10, 0x0a, 0x0c, 0x4f, 0x55, 0x54, 0x4f, 0x46, 0x42,
	0x41, 0x4c, 0x41, 0x4e, 0x43, 0x45, 0x10, 0x00, 0x12, 0x0d, 0x0a, 0x09, 0x53, 0x49, 0x47, 0x46,
	0x41, 0x49, 0x4c, 0x45, 0x44, 0x10, 0x01, 0x12, 0x1a, 0x0a, 0x16, 0x49, 0x4e, 0x56, 0x4f, 0x4b,
	0x45, 0x5f, 0x43, 0x4f, 0x4e, 0x54, 0x52, 0x41, 0x43, 0x54, 0x5f, 0x46, 0x41, 0x49, 0x4c, 0x45,
	0x44, 0x10, 0x02, 0x12, 0x1a, 0x0a, 0x16, 0x44, 0x45, 0x50, 0x4c, 0x4f, 0x59, 0x5f, 0x43, 0x4f,
	0x4e, 0x54, 0x52, 0x41, 0x43, 0x54, 0x5f, 0x46, 0x41, 0x49, 0x4c, 0x45, 0x44, 0x10, 0x03, 0x12,
	0x16, 0x0a, 0x12, 0x49, 0x4e, 0x56, 0x41, 0x4c, 0x49, 0x44, 0x5f, 0x50, 0x45, 0x52, 0x4d, 0x49,
	0x53, 0x53, 0x49, 0x4f, 0x4e, 0x10, 0x04, 0x12, 0x19, 0x0a, 0x15, 0x44, 0x49, 0x44, 0x5f, 0x49,
	0x4e, 0x56, 0x4f, 0x43, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x46, 0x41, 0x49, 0x4c, 0x45, 0x44,
	0x10, 0x05, 0x12, 0x15, 0x0a, 0x11, 0x45, 0x58, 0x45, 0x43, 0x5f, 0x4b, 0x56, 0x53, 0x51, 0x4c,
	0x5f, 0x46, 0x41, 0x49, 0x4c, 0x45, 0x44, 0x10, 0x06, 0x12, 0x0c, 0x0a, 0x08, 0x4f, 0x55, 0x54,
	0x4f, 0x46, 0x47, 0x41, 0x53, 0x10, 0x07, 0x22, 0x5a, 0x0a, 0x19, 0x49, 0x6e, 0x76, 0x61, 0x6c,
	0x69, 0x64, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x63,
	0x6f, 0x72, 0x64, 0x73, 0x12, 0x3d, 0x0a, 0x07, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x63, 0x6f, 0x6e, 0x73, 0x65, 0x6e, 0x73, 0x75,
	0x73, 0x2e, 0x49, 0x6e, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x52, 0x07, 0x72, 0x65, 0x63, 0x6f,
	0x72, 0x64, 0x73, 0x22, 0x7b, 0x0a, 0x0f, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x4d, 0x65, 0x74, 0x61, 0x12, 0x1e, 0x0a, 0x0a, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x49,
	0x6e, 0x64, 0x65, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x42, 0x6c, 0x6f, 0x63,
	0x6b, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x14, 0x0a, 0x05, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x18, 0x0a, 0x07,
	0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x76,
	0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x49, 0x6e, 0x76, 0x61, 0x6c, 0x69,
	0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x49, 0x6e, 0x76, 0x61, 0x6c, 0x69, 0x64,
	0x22, 0x66, 0x0a, 0x12, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x57,
	0x72, 0x61, 0x70, 0x70, 0x65, 0x72, 0x12, 0x2e, 0x0a, 0x12, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0c, 0x52, 0x12, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x56,
	0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x20, 0x0a, 0x0b, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0b, 0x74, 0x72, 0x61,
	0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0xc5, 0x06, 0x0a, 0x10, 0x54, 0x72, 0x61,
	0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x14, 0x0a,
	0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x70, 0x72,
	0x69, 0x63, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x67, 0x61, 0x73, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x67, 0x61, 0x73, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x12,
	0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f,
	0x61, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61,
	0x64, 0x12, 0x28, 0x0a, 0x0f, 0x65, 0x6e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x65, 0x64, 0x41, 0x6d,
	0x6f, 0x75, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0f, 0x65, 0x6e, 0x63, 0x72,
	0x79, 0x70, 0x74, 0x65, 0x64, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x2c, 0x0a, 0x11, 0x68,
	0x6f, 0x6d, 0x6f, 0x6d, 0x6f, 0x72, 0x70, 0x68, 0x69, 0x63, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x11, 0x68, 0x6f, 0x6d, 0x6f, 0x6d, 0x6f, 0x72, 0x70,
	0x68, 0x69, 0x63, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x2e, 0x0a, 0x12, 0x68, 0x6f, 0x6d,
	0x6f, 0x6d, 0x6f, 0x72, 0x70, 0x68, 0x69, 0x63, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x12, 0x68, 0x6f, 0x6d, 0x6f, 0x6d, 0x6f, 0x72, 0x70, 0x68,
	0x69, 0x63, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x32, 0x0a, 0x02, 0x6f, 0x70, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x22, 0x2e, 0x63, 0x6f, 0x6e, 0x73, 0x65, 0x6e, 0x73, 0x75,
	0x73, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x56, 0x61, 0x6c,
	0x75, 0x65, 0x2e, 0x4f, 0x70, 0x63, 0x6f, 0x64, 0x65, 0x52, 0x02, 0x6f, 0x70, 0x12, 0x14, 0x0a,
	0x05, 0x65, 0x78, 0x74, 0x72, 0x61, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x05, 0x65, 0x78,
	0x74, 0x72, 0x61, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x78, 0x74, 0x72, 0x61, 0x49, 0x64, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x65, 0x78, 0x74, 0x72, 0x61, 0x49, 0x64, 0x12, 0x3a, 0x0a,
	0x06, 0x76, 0x6d, 0x54, 0x79, 0x70, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x22, 0x2e,
	0x63, 0x6f, 0x6e, 0x73, 0x65, 0x6e, 0x73, 0x75, 0x73, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x2e, 0x56, 0x6d, 0x54, 0x79, 0x70,
	0x65, 0x52, 0x06, 0x76, 0x6d, 0x54, 0x79, 0x70, 0x65, 0x22, 0xd4, 0x02, 0x0a, 0x06, 0x4f, 0x70,
	0x63, 0x6f, 0x64, 0x65, 0x12, 0x0a, 0x0a, 0x06, 0x4e, 0x4f, 0x52, 0x4d, 0x41, 0x4c, 0x10, 0x00,
	0x12, 0x0a, 0x0a, 0x06, 0x55, 0x50, 0x44, 0x41, 0x54, 0x45, 0x10, 0x01, 0x12, 0x0a, 0x0a, 0x06,
	0x46, 0x52, 0x45, 0x45, 0x5a, 0x45, 0x10, 0x02, 0x12, 0x0c, 0x0a, 0x08, 0x55, 0x4e, 0x46, 0x52,
	0x45, 0x45, 0x5a, 0x45, 0x10, 0x03, 0x12, 0x0a, 0x0a, 0x06, 0x53, 0x4b, 0x49, 0x50, 0x56, 0x4d,
	0x10, 0x04, 0x12, 0x0b, 0x0a, 0x07, 0x44, 0x45, 0x53, 0x54, 0x52, 0x4f, 0x59, 0x10, 0x05, 0x12,
	0x0b, 0x0a, 0x07, 0x41, 0x52, 0x43, 0x48, 0x49, 0x56, 0x45, 0x10, 0x64, 0x12, 0x11, 0x0a, 0x0c,
	0x44, 0x49, 0x44, 0x5f, 0x52, 0x45, 0x47, 0x49, 0x53, 0x54, 0x45, 0x52, 0x10, 0xc8, 0x01, 0x12,
	0x0f, 0x0a, 0x0a, 0x44, 0x49, 0x44, 0x5f, 0x46, 0x52, 0x45, 0x45, 0x5a, 0x45, 0x10, 0xc9, 0x01,
	0x12, 0x11, 0x0a, 0x0c, 0x44, 0x49, 0x44, 0x5f, 0x55, 0x4e, 0x46, 0x52, 0x45, 0x45, 0x5a, 0x45,
	0x10, 0xca, 0x01, 0x12, 0x10, 0x0a, 0x0b, 0x44, 0x49, 0x44, 0x5f, 0x41, 0x42, 0x41, 0x4e, 0x44,
	0x4f, 0x4e, 0x10, 0xcb, 0x01, 0x12, 0x18, 0x0a, 0x13, 0x44, 0x49, 0x44, 0x5f, 0x55, 0x50, 0x44,
	0x41, 0x54, 0x45, 0x50, 0x55, 0x42, 0x4c, 0x49, 0x43, 0x4b, 0x45, 0x59, 0x10, 0xcc, 0x01, 0x12,
	0x15, 0x0a, 0x10, 0x44, 0x49, 0x44, 0x5f, 0x55, 0x50, 0x44, 0x41, 0x54, 0x45, 0x41, 0x44, 0x4d,
	0x49, 0x4e, 0x53, 0x10, 0xcd, 0x01, 0x12, 0x19, 0x0a, 0x14, 0x44, 0x49, 0x44, 0x43, 0x52, 0x45,
	0x44, 0x45, 0x4e, 0x54, 0x49, 0x41, 0x4c, 0x5f, 0x55, 0x50, 0x4c, 0x4f, 0x41, 0x44, 0x10, 0xce,
	0x01, 0x12, 0x1b, 0x0a, 0x16, 0x44, 0x49, 0x44, 0x43, 0x52, 0x45, 0x44, 0x45, 0x4e, 0x54, 0x49,
	0x41, 0x4c, 0x5f, 0x44, 0x4f, 0x57, 0x4e, 0x4c, 0x4f, 0x41, 0x44, 0x10, 0xcf, 0x01, 0x12, 0x1a,
	0x0a, 0x15, 0x44, 0x49, 0x44, 0x43, 0x52, 0x45, 0x44, 0x45, 0x4e, 0x54, 0x49, 0x41, 0x4c, 0x5f,
	0x41, 0x42, 0x41, 0x4e, 0x44, 0x4f, 0x4e, 0x10, 0xd0, 0x01, 0x12, 0x11, 0x0a, 0x0c, 0x44, 0x49,
	0x44, 0x5f, 0x53, 0x45, 0x54, 0x45, 0x58, 0x54, 0x52, 0x41, 0x10, 0xd1, 0x01, 0x12, 0x11, 0x0a,
	0x0c, 0x44, 0x49, 0x44, 0x5f, 0x47, 0x45, 0x54, 0x45, 0x58, 0x54, 0x52, 0x41, 0x10, 0xd2, 0x01,
	0x22, 0x4e, 0x0a, 0x06, 0x56, 0x6d, 0x54, 0x79, 0x70, 0x65, 0x12, 0x07, 0x0a, 0x03, 0x45, 0x56,
	0x4d, 0x10, 0x00, 0x12, 0x07, 0x0a, 0x03, 0x4a, 0x56, 0x4d, 0x10, 0x01, 0x12, 0x07, 0x0a, 0x03,
	0x48, 0x56, 0x4d, 0x10, 0x02, 0x12, 0x07, 0x0a, 0x03, 0x42, 0x56, 0x4d, 0x10, 0x03, 0x12, 0x0c,
	0x0a, 0x08, 0x54, 0x52, 0x41, 0x4e, 0x53, 0x46, 0x45, 0x52, 0x10, 0x04, 0x12, 0x09, 0x0a, 0x05,
	0x4b, 0x56, 0x53, 0x51, 0x4c, 0x10, 0x05, 0x12, 0x07, 0x0a, 0x03, 0x46, 0x56, 0x4d, 0x10, 0x06,
	0x22, 0x54, 0x0a, 0x0a, 0x49, 0x6e, 0x76, 0x6f, 0x6b, 0x65, 0x41, 0x72, 0x67, 0x73, 0x12, 0x12,
	0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x63, 0x6f,
	0x64, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x4e, 0x61, 0x6d, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x61, 0x72, 0x67, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0c,
	0x52, 0x04, 0x61, 0x72, 0x67, 0x73, 0x22, 0x81, 0x01, 0x0a, 0x07, 0x4e, 0x6f, 0x6e, 0x48, 0x61,
	0x73, 0x68, 0x12, 0x1a, 0x0a, 0x08, 0x6e, 0x6f, 0x64, 0x65, 0x48, 0x61, 0x73, 0x68, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0c, 0x52, 0x08, 0x6e, 0x6f, 0x64, 0x65, 0x48, 0x61, 0x73, 0x68, 0x12, 0x24,
	0x0a, 0x0d, 0x70, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x54, 0x78, 0x48, 0x61, 0x73, 0x68, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0d, 0x70, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x54, 0x78,
	0x48, 0x61, 0x73, 0x68, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x6e, 0x6f, 0x6e, 0x63, 0x65, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x05, 0x6e, 0x6f, 0x6e, 0x63, 0x65, 0x42, 0x0e, 0x5a, 0x0c, 0x2e, 0x2e,
	0x2f, 0x63, 0x6f, 0x6e, 0x73, 0x65, 0x6e, 0x73, 0x75, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x33,
}

var (
	file_fltTransaction_proto_rawDescOnce sync.Once
	file_fltTransaction_proto_rawDescData = file_fltTransaction_proto_rawDesc
)

func file_fltTransaction_proto_rawDescGZIP() []byte {
	file_fltTransaction_proto_rawDescOnce.Do(func() {
		file_fltTransaction_proto_rawDescData = protoimpl.X.CompressGZIP(file_fltTransaction_proto_rawDescData)
	})
	return file_fltTransaction_proto_rawDescData
}

var file_fltTransaction_proto_enumTypes = make([]protoimpl.EnumInfo, 4)
var file_fltTransaction_proto_msgTypes = make([]protoimpl.MessageInfo, 9)
var file_fltTransaction_proto_goTypes = []interface{}{
	(FltTransaction_TxType)(0),            // 0: consensus.FltTransaction.TxType
	(InvalidTransactionRecord_ErrType)(0), // 1: consensus.InvalidTransactionRecord.ErrType
	(TransactionValue_Opcode)(0),          // 2: consensus.TransactionValue.Opcode
	(TransactionValue_VmType)(0),          // 3: consensus.TransactionValue.VmType
	(*FltTransaction)(nil),                // 4: consensus.FltTransaction
	(*Participant)(nil),                   // 5: consensus.Participant
	(*InvalidTransactionRecord)(nil),      // 6: consensus.InvalidTransactionRecord
	(*InvalidTransactionRecords)(nil),     // 7: consensus.InvalidTransactionRecords
	(*TransactionMeta)(nil),               // 8: consensus.TransactionMeta
	(*TransactionWrapper)(nil),            // 9: consensus.TransactionWrapper
	(*TransactionValue)(nil),              // 10: consensus.TransactionValue
	(*InvokeArgs)(nil),                    // 11: consensus.InvokeArgs
	(*NonHash)(nil),                       // 12: consensus.NonHash
}
var file_fltTransaction_proto_depIdxs = []int32{
	12, // 0: consensus.FltTransaction.other:type_name -> consensus.NonHash
	0,  // 1: consensus.FltTransaction.txType:type_name -> consensus.FltTransaction.TxType
	5,  // 2: consensus.FltTransaction.participant:type_name -> consensus.Participant
	4,  // 3: consensus.InvalidTransactionRecord.tx:type_name -> consensus.FltTransaction
	1,  // 4: consensus.InvalidTransactionRecord.errType:type_name -> consensus.InvalidTransactionRecord.ErrType
	6,  // 5: consensus.InvalidTransactionRecords.records:type_name -> consensus.InvalidTransactionRecord
	2,  // 6: consensus.TransactionValue.op:type_name -> consensus.TransactionValue.Opcode
	3,  // 7: consensus.TransactionValue.vmType:type_name -> consensus.TransactionValue.VmType
	8,  // [8:8] is the sub-list for method output_type
	8,  // [8:8] is the sub-list for method input_type
	8,  // [8:8] is the sub-list for extension type_name
	8,  // [8:8] is the sub-list for extension extendee
	0,  // [0:8] is the sub-list for field type_name
}

func init() { file_fltTransaction_proto_init() }
func file_fltTransaction_proto_init() {
	if File_fltTransaction_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_fltTransaction_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FltTransaction); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_fltTransaction_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Participant); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_fltTransaction_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InvalidTransactionRecord); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_fltTransaction_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InvalidTransactionRecords); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_fltTransaction_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TransactionMeta); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_fltTransaction_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TransactionWrapper); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_fltTransaction_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TransactionValue); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_fltTransaction_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InvokeArgs); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_fltTransaction_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NonHash); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_fltTransaction_proto_rawDesc,
			NumEnums:      4,
			NumMessages:   9,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_fltTransaction_proto_goTypes,
		DependencyIndexes: file_fltTransaction_proto_depIdxs,
		EnumInfos:         file_fltTransaction_proto_enumTypes,
		MessageInfos:      file_fltTransaction_proto_msgTypes,
	}.Build()
	File_fltTransaction_proto = out.File
	file_fltTransaction_proto_rawDesc = nil
	file_fltTransaction_proto_goTypes = nil
	file_fltTransaction_proto_depIdxs = nil
}
